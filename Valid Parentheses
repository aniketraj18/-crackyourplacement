 bool isValid(string s) {//using stack
        fast();
        stack<char>st;
        int n=s.length();
        for(int i=0;i<n;++i){
            char ch=s[i];
            if(ch=='('||ch=='{'||ch=='['){
                st.push(ch);
            }
            else{
                if(!st.empty()){
                    char top=st.top();
                    if(top=='['&&ch==']'||top=='{'&&ch=='}'||top=='('&&ch==')')
                    st.pop();
                    else
                    return 0;
                }
                else
                return 0;
            }
        }if(st.empty())
        return 1;
        else
        return 0;
    }
//without using stack
  bool isValid(string s) {
        int n=s.length();
        stack<char>st;
        unordered_map<char,int>m={{'[',-1},{'(',-2},{'{',-3},{']',1},{')',2},{'}',3}};
        for(auto i:s){
            if(m[i]<0)
            st.push(i);
            else{
                if(st.empty())
                return false;
                char top=st.top();
                st.pop();
                if(m[top]+m[i]!=0)
                return false;
            }
            
        }if(st.empty())
        return true;
        else
        return false;
        
    }
};
